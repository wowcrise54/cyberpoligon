---
- name: Verify create_user_with_passwd playbook
  hosts: test_debian
  become: true
  gather_facts: false

  vars:
    # Все четыре переменные приходят из Survey / -e
    # example_user, example_uid, example_home, example_password_hash (опционально)
    verify_password_hash: "{{ example_password_hash is defined }}"

  tasks:
  ####################################################################
  # 1. /etc/passwd ----------------------------------------------------
  ####################################################################
    - name: Read passwd entry for {{ example_user }}
      ansible.builtin.getent:
        database: passwd
        key: "{{ example_user }}"
      register: user_passwd
      tags: always

    - name: Assert user exists and properties match
      ansible.builtin.assert:
        vars:
          u: "{{ user_passwd.ansible_facts.getent_passwd[example_user][0] | default({}) }}"
        that:
          - u | length > 0                  # пользователь найден
          - (u.uid  | int) == (example_uid | int)
          - u.dir == example_home
      tags: always

  ####################################################################
  # 2. /etc/shadow ----------------------------------------------------
  ####################################################################
    - name: Read shadow entry for {{ example_user }}
      ansible.builtin.getent:
        database: shadow
        key: "{{ example_user }}"
      register: user_shadow
      when: verify_password_hash
      tags: always

    - name: Assert password hash matches the requested one
      ansible.builtin.assert:
        vars:
          s: "{{ user_shadow.ansible_facts.getent_shadow[example_user][0] | default({}) }}"
        that:
          - s | length > 0
          - s.password == example_password_hash
      when: verify_password_hash
      tags: always
